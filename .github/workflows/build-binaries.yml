name: Build Binaries

on:
  push:
    branches:
      - '**'
      - '!main'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain (nightly)
        run: |
          rustup update nightly
          rustup default nightly
          rustup target add ${{ matrix.target }}

      # Optionally install build dependencies for Linux
      - name: Install build dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libssl-dev

      - name: Build for ${{ matrix.target }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/

  build-rhel8:
    runs-on: ubuntu-latest
    container:
      image: registry.access.redhat.com/ubi8/ubi:latest
    steps:
      - uses: actions/checkout@v4
      - name: Install build dependencies
        run: |
          yum -y update
          yum -y install gcc gcc-c++ make pkgconfig openssl-devel git curl which
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly
          source $HOME/.cargo/env
          rustup target add x86_64-unknown-linux-gnu
      - name: Build (RHEL8, glibc 2.28)
        run: |
          source $HOME/.cargo/env
          cargo build --release --target x86_64-unknown-linux-gnu
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-x86_64-unknown-linux-gnu-rhel8
          path: target/x86_64-unknown-linux-gnu/release/

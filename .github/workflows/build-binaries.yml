name: Build Binaries

on:
  push:
    branches:
      - '**'
      - '!main'
  pull_request:
    branches:
      - '**'
      - '!main'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
        
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain -- nightly
        run: |
          rustup update nightly
          rustup default nightly
          rustup target add ${{ matrix.target }}
      
#      - name: Install build dependencies
#        if: matrix.target == 'x86_64-unknown-linux-gnu'
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y build-essential pkg-config libssl-dev
      
      - name: Build for ${{ matrix.target }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/

name: Build Binaries

on:
  push:
    branches:
      - '**'
      - '!main'
  pull_request:
    branches:
      - '**'
      - '!main'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
        
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain -- nightly
        run: |
          rustup update nightly
          rustup default nightly
          rustup target add ${{ matrix.target }}
      
#      - name: Install build dependencies
#        if: matrix.target == 'x86_64-unknown-linux-gnu'
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y build-essential pkg-config libssl-dev
      
      - name: Build for ${{ matrix.target }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/
